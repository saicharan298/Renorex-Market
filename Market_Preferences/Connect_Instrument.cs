///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Market_Preferences
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Connect_Instrument recording.
    /// </summary>
    [TestModule("07a52999-ffcb-4f66-9823-8a711c38f406", ModuleType.Recording, 1)]
    public partial class Connect_Instrument : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Market_PreferencesRepository repository.
        /// </summary>
        public static Market_PreferencesRepository repo = Market_PreferencesRepository.Instance;

        static Connect_Instrument instance = new Connect_Instrument();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Connect_Instrument()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Connect_Instrument Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s for the attribute 'Visible' to equal the specified value 'True'. Associated repository item: 'FSWModule_Repo.ConnectionAutomationIdsCommunicationInt'", repo.FSWModule_Repo.ConnectionAutomationIdsCommunicationIntInfo, new RecordItemIndex(0));
            repo.FSWModule_Repo.ConnectionAutomationIdsCommunicationIntInfo.WaitForAttributeEqual(30000, "Visible", "True");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FSWModule_Repo.ConnectionAutomationIdsCommunicationInt' at Center.", repo.FSWModule_Repo.ConnectionAutomationIdsCommunicationIntInfo, new RecordItemIndex(1));
            repo.FSWModule_Repo.ConnectionAutomationIdsCommunicationInt.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmartFit.ConnectionAutomationIdsCommunicationInt' at Center.", repo.SmartFit.ConnectionAutomationIdsCommunicationIntInfo, new RecordItemIndex(2));
            repo.SmartFit.ConnectionAutomationIdsCommunicationInt.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FSWModule_Repo.ConnectionAutomationIdsConnectAction' at Center.", repo.FSWModule_Repo.ConnectionAutomationIdsConnectActionInfo, new RecordItemIndex(3));
            repo.FSWModule_Repo.ConnectionAutomationIdsConnectAction.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s for the attribute 'Enabled' to equal the specified value 'True'. Associated repository item: 'FSWModule_Repo.StateMachineAutomationIdsContinueAction'", repo.FSWModule_Repo.StateMachineAutomationIdsContinueActionInfo, new RecordItemIndex(4));
            repo.FSWModule_Repo.StateMachineAutomationIdsContinueActionInfo.WaitForAttributeEqual(30000, "Enabled", "True");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FSWModule_Repo.StateMachineAutomationIdsContinueAction' at Center.", repo.FSWModule_Repo.StateMachineAutomationIdsContinueActionInfo, new RecordItemIndex(5));
            repo.FSWModule_Repo.StateMachineAutomationIdsContinueAction.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s for the attribute 'Enabled' to equal the specified value 'True'. Associated repository item: 'FSWModule_Repo.StateMachineAutomationIdsContinueAction'", repo.FSWModule_Repo.StateMachineAutomationIdsContinueActionInfo, new RecordItemIndex(6));
            repo.FSWModule_Repo.StateMachineAutomationIdsContinueActionInfo.WaitForAttributeEqual(30000, "Enabled", "True");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FSWModule_Repo.StateMachineAutomationIdsContinueAction' at Center.", repo.FSWModule_Repo.StateMachineAutomationIdsContinueActionInfo, new RecordItemIndex(7));
            repo.FSWModule_Repo.StateMachineAutomationIdsContinueAction.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s for the attribute 'Enabled' to equal the specified value 'True'. Associated repository item: 'FSWModule_Repo.StateMachineAutomationIdsContinueAction'", repo.FSWModule_Repo.StateMachineAutomationIdsContinueActionInfo, new RecordItemIndex(8));
            repo.FSWModule_Repo.StateMachineAutomationIdsContinueActionInfo.WaitForAttributeEqual(30000, "Enabled", "True");
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(9));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FSWModule_Repo.StateMachineAutomationIdsContinueAction' at Center.", repo.FSWModule_Repo.StateMachineAutomationIdsContinueActionInfo, new RecordItemIndex(10));
            repo.FSWModule_Repo.StateMachineAutomationIdsContinueAction.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 4s.", new RecordItemIndex(11));
            Delay.Duration(4000, false);
            
            Mouse_Click_StateMachineAutomationIdsContinueAction(repo.FSWModule_Repo.StateMachineAutomationIdsContinueActionInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s for the attribute 'Visible' to equal the specified value 'True'. Associated repository item: 'FSWModule_Repo.NavigationAutomationIdsMainAutomationId'", repo.FSWModule_Repo.NavigationAutomationIdsMainAutomationIdInfo, new RecordItemIndex(13));
            repo.FSWModule_Repo.NavigationAutomationIdsMainAutomationIdInfo.WaitForAttributeEqual(30000, "Visible", "True");
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(14));
            Delay.Duration(5000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
