///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Market_Preferences
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Uninstall_And_Delete recording.
    /// </summary>
    [TestModule("425076d3-65fa-45ca-a2bf-3e49d48ccb18", ModuleType.Recording, 1)]
    public partial class Uninstall_And_Delete : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Market_PreferencesRepository repository.
        /// </summary>
        public static Market_PreferencesRepository repo = Market_PreferencesRepository.Instance;

        static Uninstall_And_Delete instance = new Uninstall_And_Delete();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Uninstall_And_Delete()
        {
            txtUninstallBuildname = "";
            txtDeleteFileBuildname = "";
            txtBuildname = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Uninstall_And_Delete Instance
        {
            get { return instance; }
        }

#region Variables

        string _txtUninstallBuildname;

        /// <summary>
        /// Gets or sets the value of variable txtUninstallBuildname.
        /// </summary>
        [TestVariable("d2da52e9-c0f7-4733-aa3f-1d1e4a0ad5a0")]
        public string txtUninstallBuildname
        {
            get { return _txtUninstallBuildname; }
            set { _txtUninstallBuildname = value; }
        }

        string _txtDeleteFileBuildname;

        /// <summary>
        /// Gets or sets the value of variable txtDeleteFileBuildname.
        /// </summary>
        [TestVariable("86b729ab-488f-4d72-9b2f-c0f246b0a19a")]
        public string txtDeleteFileBuildname
        {
            get { return _txtDeleteFileBuildname; }
            set { _txtDeleteFileBuildname = value; }
        }

        string _txtBuildname;

        /// <summary>
        /// Gets or sets the value of variable txtBuildname.
        /// </summary>
        [TestVariable("584491c6-57b2-417d-98ad-7eebde1fb855")]
        public string txtBuildname
        {
            get { return _txtBuildname; }
            set { _txtBuildname = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Installation_UserCodeCollection.Uninstall(txtUninstallBuildname);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(1));
            Delay.Duration(10000, false);
            
            Installation_UserCodeCollection.DeleteFiles(txtDeleteFileBuildname);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(3));
            Delay.Duration(5000, false);
            
            Installation_UserCodeCollection.Uninstall(txtUninstallBuildname);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(5));
            Delay.Duration(5000, false);
            
            Installation_UserCodeCollection.Uninstall(txtUninstallBuildname);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(7));
            Delay.Duration(3000, false);
            
            Installation_UserCodeCollection.Deleting_Market_Pref_file(txtBuildname);
            Delay.Milliseconds(0);
            
            Installation_UserCodeCollection.Uninstall(txtUninstallBuildname);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(10));
            Delay.Duration(3000, false);
            
            Installation_UserCodeCollection.DeleteFiles(txtUninstallBuildname);
            Delay.Milliseconds(0);
            
            Installation_UserCodeCollection.Deleting_Market_Pref_file(txtBuildname);
            Delay.Milliseconds(0);
            
            Installation_UserCodeCollection.Uninstall(txtUninstallBuildname);
            Delay.Milliseconds(0);
            
            Installation_UserCodeCollection.kill_All_Open_ExcelSheets();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
