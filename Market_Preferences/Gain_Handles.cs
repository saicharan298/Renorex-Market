///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Market_Preferences
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Gain_Handles recording.
    /// </summary>
    [TestModule("6b4fc7ec-44eb-4084-b680-fbf0e50170c6", ModuleType.Recording, 1)]
    public partial class Gain_Handles : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Market_PreferencesRepository repository.
        /// </summary>
        public static Market_PreferencesRepository repo = Market_PreferencesRepository.Instance;

        static Gain_Handles instance = new Gain_Handles();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Gain_Handles()
        {
            Market_Gain_Handlers = "";
            txtBuildname = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Gain_Handles Instance
        {
            get { return instance; }
        }

#region Variables

        string _Market_Gain_Handlers;

        /// <summary>
        /// Gets or sets the value of variable Market_Gain_Handlers.
        /// </summary>
        [TestVariable("24e7b119-142a-4fab-9d77-1782c6fc3360")]
        public string Market_Gain_Handlers
        {
            get { return _Market_Gain_Handlers; }
            set { _Market_Gain_Handlers = value; }
        }

        string _txtBuildname;

        /// <summary>
        /// Gets or sets the value of variable txtBuildname.
        /// </summary>
        [TestVariable("ae6e9ec3-37b9-41a4-a476-646a5eaf43fb")]
        public string txtBuildname
        {
            get { return _txtBuildname; }
            set { _txtBuildname = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmartFit15InstallShieldWizard.NavigationAutomationIdsMainAutomationId' at Center.", repo.SmartFit15InstallShieldWizard.NavigationAutomationIdsMainAutomationIdInfo, new RecordItemIndex(0));
            //repo.SmartFit15InstallShieldWizard.NavigationAutomationIdsMainAutomationId.Click();
            //Delay.Milliseconds(200);
            
            Links_UserCodeCollection.Click_on_Fitting(txtBuildname);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 15s.", new RecordItemIndex(2));
            Delay.Duration(15000, false);
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 5s for the attribute 'Visible' to equal the specified value 'True'. Associated repository item: 'Window.Back_Button'", repo.Window.Back_ButtonInfo, new RecordItemIndex(3));
            //repo.Window.Back_ButtonInfo.WaitForAttributeEqual(5000, "Visible", "True");
            
            Mouse_Click_Back_Button(repo.Window.Back_ButtonInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s for the attribute 'Visible' to equal the specified value 'True'. Associated repository item: 'FSWModule_Repo.Fitting'", repo.FSWModule_Repo.FittingInfo, new RecordItemIndex(5));
            repo.FSWModule_Repo.FittingInfo.WaitForAttributeEqual(30000, "Visible", "True");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'FSWModule_Repo.Fitting' at Center.", repo.FSWModule_Repo.FittingInfo, new RecordItemIndex(6));
            repo.FSWModule_Repo.Fitting.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SmartFit15InstallShieldWizard.NavigationAutomationIdsMainAutomationId1' at Center.", repo.SmartFit15InstallShieldWizard.NavigationAutomationIdsMainAutomationId1Info, new RecordItemIndex(7));
            repo.SmartFit15InstallShieldWizard.NavigationAutomationIdsMainAutomationId1.Click();
            Delay.Milliseconds(200);
            
            Links_UserCodeCollection.Gain_Handlers_method(Market_Gain_Handlers, txtBuildname);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
